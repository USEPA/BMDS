name: Build Python Packages

on:
  schedule:
    - cron: '30 3 1 */1 *'  # At 03:30 on the 1st of every month
  push:
    tags:
      - '*'
  workflow_dispatch:
  pull_request:  # TODO - remove this line

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-24.04, windows-2022, macos-14]  # TODO - uncomment this line
        os: [ubuntu-24.04]  # TODO - remove this line

    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json', 'vendor/**') }}

      - name: Set environment variables for Linux
        if: runner.os == 'Linux'
        shell: bash
        run: |
          export VCPKG_ROOT="$GITHUB_WORKSPACE/vcpkg_installed/x64-linux-dynamic"

          echo VCPKG_ROOT="$VCPKG_ROOT" >> $GITHUB_ENV
          echo EIGEN_DIR="$VCPKG_ROOT/include/eigen3" >> $GITHUB_ENV
          echo NLOPT_DIR="$VCPKG_ROOT;$VCPKG_ROOT/lib" >> $GITHUB_ENV
          echo GSL_DIR="$VCPKG_ROOT;$VCPKG_ROOT/lib" >> $GITHUB_ENV
          echo CMAKE_BUILD_PARALLEL_LEVEL="$(nproc)" >> $GITHUB_ENV
          export RUNNER_OS="$RUNNER_OS" >> $GITHUB_ENV
          env  # TODO - remove after cleanup

      - name: Set environment variables for Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo EIGEN_DIR="$GITHUB_WORKSPACE\vcpkg_installed\x64-windows\include" >> $GITHUB_ENV
          echo NLOPT_DIR="$GITHUB_WORKSPACE\vcpkg_installed\x64-windows\lib" >> $GITHUB_ENV
          echo GSL_DIR="$GITHUB_WORKSPACE\vcpkg_installed\x64-windows\lib" >> $GITHUB_ENV
          echo CMAKE_BUILD_PARALLEL_LEVEL="$(nproc)" >> $GITHUB_ENV

      - name: Set environment variables for macOS
        if: runner.os == 'macOS'
        shell: bash
        run: |
          echo EIGEN_DIR="$GITHUB_WORKSPACE/vcpkg_installed/arm64-osx-dynamic/include/eigen3" >> $GITHUB_ENV
          echo NLOPT_DIR="$GITHUB_WORKSPACE/vcpkg_installed/arm64-osx-dynamic/lib" >> $GITHUB_ENV
          echo GSL_DIR="$GITHUB_WORKSPACE/vcpkg_installed/arm64-osx-dynamic" >> $GITHUB_ENV
          echo CMAKE_BUILD_PARALLEL_LEVEL="$(nproc)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_ARCHS: "auto64"
          # CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_BUILD: "cp313-*" # TODO - remove this line
          CIBW_SKIP: "*-win32 *-win_arm64 *musllinux* *i686 *-macosx_x86_64 *-macosx_universal2"
          CIBW_BEFORE_BUILD: "tools/cibw_setup.sh"
          CIBW_TEST_REQUIRES: "pytest pytest-mpl"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_ENVIRONMENT_PASS_LINUX: "EIGEN_DIR NLOPT_DIR GSL_DIR CMAKE_BUILD_PARALLEL_LEVEL RUNNER_OS"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-linux-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  merge_wheels:
    runs-on: ubuntu-24.04
    needs: build_wheels
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          delete-merged: true
