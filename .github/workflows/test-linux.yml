name: Test Linux

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  pybmds:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-22.04, windows-2022, macos-14]
        os: [ubuntu-22.04]
    steps:
      - uses: actions/checkout@v4

      # --------------------------------------------------------
      # --------------- Install C++ dependencies ---------------
      # --------------------------------------------------------
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: vcpkg_installed
          key: ${{ runner.os }}-vcpkg_installed-${{ hashFiles('vcpkg.json') }}

      - name: Acquire vcpkg
        if: steps.cache-deps.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: "Microsoft/vcpkg"
          path: vcpkg
          ref: c9c17dcea3016bc241df0422e82b8aea212dcb93

      - name: Install libraries with vcpkg.json (macOS/Linux)
        if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os != 'Windows'
        run: "${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh"

      - name: Install libraries with vcpkg.json (macOS/Linux)
        if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os != 'Windows'
        shell: bash
        run: ./vcpkg/vcpkg install

      - name: Install libraries with vcpkg.json (Windows)
        if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os == 'Windows'
        shell: bash
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Install libraries with vcpkg.json (Windows)
        if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os == 'Windows'
        shell: bash
        run: ./vcpkg/vcpkg.exe install

      # --------------------------------------------------------
      # --------------------- Setup pybmds ---------------------
      # --------------------------------------------------------

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: "**/pyproject.toml"

