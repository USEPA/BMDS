//unit_tests.cpp
#include "assert.h"
#include <vector>
#include "bmds_helper.h"
#include "unit_tests.h"

int run_all_unitTests(){

	std::cout<<"Running unit tests"<<std::endl;
	objfunc_test();
	Nlogist_probs_test();
	return 0;
}

void objfunc_test(){
	std::vector<double> x{1.5, 2.0, 3.2};
        std::vector<double> tmp;
        //assert(objfunc_bmdl(x, tmp, NULL)==1.5);
        expect_true(objfunc_bmdl(x, tmp, NULL)==1.5);
}

void Nlogist_probs_test(){

	std::vector<double> Xi = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000};
	std::vector<double> Ls = {4,5,6,6,6,6,7,7,7,9,9,9,9,9,9,11,11,11,12,12,13,13,13,14,14,2,4,5,7,7,7,7,7,8,8,9,9,9,9,9,10,10,10,10,11,12,13,14,14,3,6,6,7,7,8,8,9,9,9,9,10,10,10,10,11,12,13,13,14,14,14,14,14,14,14,6,6,6,7,7,8,8,8,10,10,10,10,10,11,11,11,12,12,13,13,13,14,14,14,3,4,4,4,5,6,6,7,7,7,7,8,9,10,10,10,11,12,12,13,13,13,14,14,14,14}; 

	std::vector<double> p = {0.054599,-14.099836,0.165150,-0.059984,1.437543,0.015216,0.047678,0.247516,0.254625,0.551903};
	//only care about Spec[0] and Spec[2]
	std::vector<bool> Spec = {false, false, false, false, false, false, false, false, false, false};
        bool compgrad = false;

        int Nobs = Xi.size();
	std::vector<double> probs(Nobs);
	std::vector<std::vector<double>> gradij(Nobs, std::vector<double> (5));
	struct nestedObjData objData;
	objData.isBMDL = false;
	objData.smax = 14.0;
	objData.smin = 2.0;
	objData.Ls = Ls;
	objData.Xi = Xi;
	objData.Spec = Spec;
	objData.sijfixed = 9.28;
	objData.riskType = 1;
	objData.BMR = 0.1;
	objData.tD = 575.903266; 

	std::vector<double> expProbs1 = {0.073024,0.082237,0.091449,0.091449,0.091449,0.091449,0.100662,0.100662,0.100662,0.119087,0.119087,0.119087,0.119087,0.119087,0.119087,0.137512,0.137512,0.137512,0.146725,0.146725,0.155937,0.155937,0.155937,0.165150,0.165150,0.170946,0.175634,0.178533,0.185362,0.185362,0.185362,0.185362,0.185362,0.189261,0.189261,0.193464,0.193464,0.193464,0.193464,0.193464,0.197956,0.197956,0.197956,0.197956,0.202723,0.207752,0.213029,0.218541,0.218541,0.310605,0.300592,0.300592,0.298279,0.298279,0.296467,0.296467,0.295146,0.295146,0.295146,0.295146,0.294306,0.294306,0.294306,0.294306,0.293936,0.294023,0.294555,0.294555,0.295519,0.295519,0.295519,0.295519,0.295519,0.295519,0.295519,0.498023,0.498023,0.498023,0.489821,0.489821,0.481997,0.481997,0.481997,0.467555,0.467555,0.467555,0.467555,0.467555,0.460969,0.460969,0.460969,0.454823,0.454823,0.449128,0.449128,0.449128,0.443894,0.443894,0.443894,0.797346,0.789749,0.789749,0.789749,0.782026,0.774190,0.774190,0.766253,0.766253,0.766253,0.766253,0.758230,0.750136,0.741988,0.741988,0.741988,0.733804,0.725603,0.725603,0.717403,0.717403,0.717403,0.709226,0.709226,0.709226,0.709226};


        Nlogist_probs(probs, p, compgrad, gradij, &objData);
        for (int i=0; i<Nobs; i++){
           essentiallyEqual(expProbs1[i], probs[i], 1.5e-6);
	}	

}

void Nlogist_lk_test(){

	std::vector<double> Xi = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000};
        std::vector<double> Ls = {4,5,6,6,6,6,7,7,7,9,9,9,9,9,9,11,11,11,12,12,13,13,13,14,14,2,4,5,7,7,7,7,7,8,8,9,9,9,9,9,10,10,10,10,11,12,13,14,14,3,6,6,7,7,8,8,9,9,9,9,10,10,10,10,11,12,13,13,14,14,14,14,14,14,14,6,6,6,7,7,8,8,8,10,10,10,10,10,11,11,11,12,12,13,13,13,14,14,14,3,4,4,4,5,6,6,7,7,7,7,8,9,10,10,10,11,12,12,13,13,13,14,14,14,14};

        std::vector<double> p = {0.054599,-14.099836,0.165150,-0.059984,1.437543,0.015216,0.047678,0.247516,0.254625,0.551903};
        //only care about Spec[0] and Spec[2]
        std::vector<bool> Spec = {false, false, false, false, false, false, false, false, false, false};
        bool compgrad = false;

        int Nobs = Xi.size();
        std::vector<double> probs(Nobs);
        std::vector<std::vector<double>> gradij(Nobs, std::vector<double> (5));
        struct nestedObjData objData;
        objData.isBMDL = false;
        objData.smax = 14.0;
        objData.smin = 2.0;
        objData.Ls = Ls;
        objData.Xi = Xi;
        objData.Spec = Spec;
        objData.sijfixed = 9.28;
        objData.riskType = 1;
        objData.BMR = 0.1;
        objData.tD = 575.903266;


	double exp_lk = -337.540036;
	double lk = Nlogist_lk(p, &objData);

	essentiallyEqual(lk, exp_lk, 1.5e-6);

}
